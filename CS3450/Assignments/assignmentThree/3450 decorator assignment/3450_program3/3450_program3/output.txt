1:     Like Smalltalk, Python supports class methods, which differ from static 
2:     

3:     methods in that the exact dynamic type of the object being operated on is 
4:     

5:     an implicit parameter to the method (as a type object).  The following 
6:     

7:     example keeps a separate per-class object counter for every class in a 
8:     

9:     hierarchy (in this case, a Shape hierarchy): 
10:     

11:     
12:     

13:     class Shape(object):
14:     

15:         _count = 0	# A shared value for Shape classes with no current objects
16:     

17:       	
18:     

19:         @classmethod
20:     

21:         def _incr(cls):
22:     

23:             cls._count += 1         # Create/update class attribute
24:     

25:           
26:     

27:         @classmethod
28:     

29:         def showCount(cls):
30:     

31:             print 'Class %s has count = %s' % (cls.__name__, cls._count)
32:     

33:             
34:     

35:         def __init__(self):		# A constructor
36:     

37:             self._incr()
38:     

39:     
40:     

41:     class Point(Shape): pass	# An empty subclass of Shape
42:     

43:     class Line(Shape): pass		# Ditto
44:     

45:     
46:     

47:     This requires some perusing if you're new to Python.  Python requires 
48:     

49:     indentation to show logical subordination (whereas good programmers of 
50:     

51:     other languages indent by convention), so you can readily see that the 
52:     

53:     class Shape has three methods, _incr, showCount, and __init__.  The latter 
54:     

55:     is the special name used for constructors.  The other two methods are 
56:     

57:     class methods (indicated by the @classmethod prefix), so their parameter 
58:     

59:     is the unique class object for the instance on which they are invoked.  
60:     

61:     (The term "class object" here refers to a unique, bona fide object that 
62:     

63:     describes a class type, similar to, but more robust than, std::type_info 
64:     

65:     objects in C++.) The method named _incr is only called by the constructor.  
66:     

67:     
68:     

